{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unnecessary local variable",
  "severity": "Moderate",
  "comment": "Variable used only in following return and can be inlined",
  "detailsInfo": "Reports local variables that used only in the very next `return` statement or exact copies of other variables.\n\nSuch variables can be safely inlined to make the code more clear.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/reference/references/TypeReference.kt",
      "language": "kotlin",
      "line": 24,
      "offset": 13,
      "length": 16,
      "code": {
        "startLine": 22,
        "length": 16,
        "offset": 55,
        "surroundingCode": "\n    override fun resolve(): PsiElement? {\n        val resolveInContext = myReferenceOwner.contextAccept(\n            TypeResolveVisitor(\n                myReferenceOwner,"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnnecessaryVariable"
  },
  "hash": "9dabb714b14394745ea49d8f9d66c3d67618457e2e616efc70dfaae076bc12d4"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Redundant nullable return type",
  "severity": "High",
  "comment": "'getReference' always returns non-null type",
  "detailsInfo": "Reports functions and variables with nullable return type which never return or become `null`.\n\n**Example:**\n\n\n      fun greeting(user: String): String? = \"Hello, $user!\"\n\nAfter the quick-fix is applied:\n\n\n      fun greeting(user: String): String = \"Hello, $user!\"\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/call/VB6LastBlockMemberCallImpl.kt",
      "language": "kotlin",
      "line": 31,
      "offset": 46,
      "length": 1,
      "code": {
        "startLine": 29,
        "length": 1,
        "offset": 91,
        "surroundingCode": "        get() = findFirstChildByTypeOf(this)\n\n    override fun getReference(): VB6Reference? {\n        return createReference()\n    }"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RedundantNullableReturnType"
  },
  "hash": "ebad77a0a0b7f4b893a7fc94d0a6a0d8703dc6bf45fff7eac8e8c201b99e8ac6"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Redundant nullable return type",
  "severity": "High",
  "comment": "'referenceFactory' is always non-null type",
  "detailsInfo": "Reports functions and variables with nullable return type which never return or become `null`.\n\n**Example:**\n\n\n      fun greeting(user: String): String? = \"Hello, $user!\"\n\nAfter the quick-fix is applied:\n\n\n      fun greeting(user: String): String = \"Hello, $user!\"\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/call/VB6LastBlockMemberCallImpl.kt",
      "language": "kotlin",
      "line": 42,
      "offset": 55,
      "length": 1,
      "code": {
        "startLine": 40,
        "length": 1,
        "offset": 65,
        "surroundingCode": "        }\n\n    override val referenceFactory: VB6ReferenceFactory?\n        get() = this\n"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RedundantNullableReturnType"
  },
  "hash": "9d4db32b08e9a64a8920b6bd86215d70bf0e0003bbe32401a50d18f15502a4c8"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Redundant nullable return type",
  "severity": "High",
  "comment": "'createReference' always returns non-null type",
  "detailsInfo": "Reports functions and variables with nullable return type which never return or become `null`.\n\n**Example:**\n\n\n      fun greeting(user: String): String? = \"Hello, $user!\"\n\nAfter the quick-fix is applied:\n\n\n      fun greeting(user: String): String = \"Hello, $user!\"\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/call/VB6LastExplicitMemberProcedureCallImpl.kt",
      "language": "kotlin",
      "line": 46,
      "offset": 49,
      "length": 1,
      "code": {
        "startLine": 44,
        "length": 1,
        "offset": 70,
        "surroundingCode": "        get() = this\n\n    override fun createReference(): VB6Reference? {\n        val blockMembersCall = parent as VB6ExplicitMemberProcedureCall\n        return blockMembersCall.inlineCall?.let { inlineCall ->"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RedundantNullableReturnType"
  },
  "hash": "f4216bbc9f3cfc7e95e64f100d4eb7d6ecf5cd735e395c01b00def312bb2a8ac"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Redundant nullable return type",
  "severity": "High",
  "comment": "'referenceFactory' is always non-null type",
  "detailsInfo": "Reports functions and variables with nullable return type which never return or become `null`.\n\n**Example:**\n\n\n      fun greeting(user: String): String? = \"Hello, $user!\"\n\nAfter the quick-fix is applied:\n\n\n      fun greeting(user: String): String = \"Hello, $user!\"\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/call/VB6LastExplicitMemberProcedureCallImpl.kt",
      "language": "kotlin",
      "line": 43,
      "offset": 55,
      "length": 1,
      "code": {
        "startLine": 41,
        "length": 1,
        "offset": 56,
        "surroundingCode": "\n\n    override val referenceFactory: VB6ReferenceFactory?\n        get() = this\n"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RedundantNullableReturnType"
  },
  "hash": "9c57266679c1eae14091c6b73a0eedd97582bb31222081e73ada32b5105d5699"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Redundant nullable return type",
  "severity": "High",
  "comment": "'namedElementOwner' is always non-null type",
  "detailsInfo": "Reports functions and variables with nullable return type which never return or become `null`.\n\n**Example:**\n\n\n      fun greeting(user: String): String? = \"Hello, $user!\"\n\nAfter the quick-fix is applied:\n\n\n      fun greeting(user: String): String = \"Hello, $user!\"\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/module/VB6Module.kt",
      "language": "kotlin",
      "line": 123,
      "offset": 57,
      "length": 1,
      "code": {
        "startLine": 121,
        "length": 1,
        "offset": 78,
        "surroundingCode": "        get() = null\n\n    override val namedElementOwner: VB6NamedElementOwner?\n        get() = this\n"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RedundantNullableReturnType"
  },
  "hash": "9b18dec4462f1fb2d36f442c377a77da44e96ea1a6683b4f34606caaf38f3c81"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Redundant nullable return type",
  "severity": "High",
  "comment": "'namedElementOwner' is always non-null type",
  "detailsInfo": "Reports functions and variables with nullable return type which never return or become `null`.\n\n**Example:**\n\n\n      fun greeting(user: String): String? = \"Hello, $user!\"\n\nAfter the quick-fix is applied:\n\n\n      fun greeting(user: String): String = \"Hello, $user!\"\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6AttributeStmt.kt",
      "language": "kotlin",
      "line": 50,
      "offset": 57,
      "length": 1,
      "code": {
        "startLine": 48,
        "length": 1,
        "offset": 78,
        "surroundingCode": "        get() = null\n\n    override val namedElementOwner: VB6NamedElementOwner?\n        get() = this\n"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RedundantNullableReturnType"
  },
  "hash": "33426c7d182d871d36b2e6d8f66ce85b73fbc6fe59c02688ba3f15bae755faee"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Redundant nullable return type",
  "severity": "High",
  "comment": "'referenceFactory' is always non-null type",
  "detailsInfo": "Reports functions and variables with nullable return type which never return or become `null`.\n\n**Example:**\n\n\n      fun greeting(user: String): String? = \"Hello, $user!\"\n\nAfter the quick-fix is applied:\n\n\n      fun greeting(user: String): String = \"Hello, $user!\"\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/loops/VB6ForSelfReference.kt",
      "language": "kotlin",
      "line": 25,
      "offset": 55,
      "length": 1,
      "code": {
        "startLine": 23,
        "length": 1,
        "offset": 61,
        "surroundingCode": "    }\n\n    override val referenceFactory: VB6ReferenceFactory?\n        get() = this\n"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RedundantNullableReturnType"
  },
  "hash": "8aac4003e52021a52bf7697b46eac631fac08ca346e006b1bde83690e549ca00"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Redundant nullable return type",
  "severity": "High",
  "comment": "'quickNavigationInfoFor' always returns non-null type",
  "detailsInfo": "Reports functions and variables with nullable return type which never return or become `null`.\n\n**Example:**\n\n\n      fun greeting(user: String): String? = \"Hello, $user!\"\n\nAfter the quick-fix is applied:\n\n\n      fun greeting(user: String): String = \"Hello, $user!\"\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/documentation/VB6DocumentationProvider.kt",
      "language": "kotlin",
      "line": 50,
      "offset": 57,
      "length": 1,
      "code": {
        "startLine": 48,
        "length": 1,
        "offset": 59,
        "surroundingCode": "}\n\nfun quickNavigationInfoFor(element: PsiElement?): String? {\n    return when (element) {\n        is VB6NamedElementOwner -> {"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RedundantNullableReturnType"
  },
  "hash": "14bccc3c90b9a3fe4636f9e6d5e1b3ee9166324ca1a2f8029fcb174804e362d6"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Redundant nullable return type",
  "severity": "High",
  "comment": "'referenceFactory' is always non-null type",
  "detailsInfo": "Reports functions and variables with nullable return type which never return or become `null`.\n\n**Example:**\n\n\n      fun greeting(user: String): String? = \"Hello, $user!\"\n\nAfter the quick-fix is applied:\n\n\n      fun greeting(user: String): String = \"Hello, $user!\"\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/call/VB6AtomicInlineCall.kt",
      "language": "kotlin",
      "line": 22,
      "offset": 55,
      "length": 1,
      "code": {
        "startLine": 20,
        "length": 1,
        "offset": 61,
        "surroundingCode": "    }\n\n    override val referenceFactory: VB6ReferenceFactory?\n        get() = this\n"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RedundantNullableReturnType"
  },
  "hash": "a403e62a55d12c337ef5600010daf69504251ddbe61e6e928c7ccc0ae6e6848d"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Redundant nullable return type",
  "severity": "High",
  "comment": "'referenceFactory' is always non-null type",
  "detailsInfo": "Reports functions and variables with nullable return type which never return or become `null`.\n\n**Example:**\n\n\n      fun greeting(user: String): String? = \"Hello, $user!\"\n\nAfter the quick-fix is applied:\n\n\n      fun greeting(user: String): String = \"Hello, $user!\"\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6ImplementsStmt.kt",
      "language": "kotlin",
      "line": 28,
      "offset": 55,
      "length": 1,
      "code": {
        "startLine": 26,
        "length": 1,
        "offset": 61,
        "surroundingCode": "    }\n\n    override val referenceFactory: VB6ReferenceFactory?\n        get() = TODO(\"Not yet implemented\")\n"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RedundantNullableReturnType"
  },
  "hash": "1035ec31dcbe273ee92cd20bf126b494471547d3637f6afd99a3ca9c3c96562a"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/general/VB6Expression.kt",
      "language": "kotlin",
      "line": 8,
      "offset": 40,
      "length": 3,
      "code": {
        "startLine": 6,
        "length": 3,
        "offset": 73,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6Expression: VB6PsiElement {\n}\n\nclass VB6ExpressionImpl(node: ASTNode) : VB6PsiNode(node), VB6Expression {"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "b0a2a820f8dd9ffb831b39d5a526af3ed55c7fb544a8b803b3b01f37e1ebfa74"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/call/VB6InlineVariableOrProcedureCall.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 60,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 93,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6InlineVariableOrProcedureCall : VB6AtomicCall {\n}\n\nclass VB6InlineVariableOrProcedureCallImpl(node: ASTNode) : VB6PsiNode(node), VB6InlineVariableOrProcedureCall {"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "270fe254ab4e98c289574e47c45a55e6ae004c5a1ff011ee11df9e9e8e2fcdb1"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/call/VB6AtomicExplicitProcedureCall.kt",
      "language": "kotlin",
      "line": 13,
      "offset": 98,
      "length": 4,
      "code": {
        "startLine": 11,
        "length": 4,
        "offset": 131,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6AtomicExplicitProcedureCall : VB6ReferenceOwner, VB6ReferenceFactory, VB6AtomicCall {\n\n}\n\nclass VB6AtomicExplicitProcedureCallImpl(node: ASTNode) : VB6PsiNode(node), VB6AtomicExplicitProcedureCall {"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "3685259ca2d9da6382f433e7fb0ed1d850ddce3d4e0b6591faf41b48a28f5ff9"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6WidthStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 40,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 73,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6WidthStmt : VB6PsiElement {\n}\n\nclass VB6WidthStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "bd64051e4548ec32807d05c8d5a72d326556ca56202ec63f6d2eeae232c62c74"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6LsetStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 39,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 72,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6LsetStmt : VB6PsiElement {\n}\n\nclass VB6LsetStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "ff2f49883f7a23b74b3e29032dfe8496b60a22fdf48971c8e4bd0ec50bad285a"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6ErrorStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 40,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 73,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6ErrorStmt : VB6PsiElement {\n}\n\nclass VB6ErrorStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "5308e52ab019d319534c91c5121ea6b7d86cd391bb20647c0503e92964ae6bc6"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6FilecopyStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 43,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 76,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6FilecopyStmt : VB6PsiElement {\n}\n\nclass VB6FilecopyStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "70853115751c3f6c2ca87ee56a10e30abbbf0e12c9b9b261b34aad06f290aedf"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6UnlockStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 41,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 74,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6UnlockStmt : VB6PsiElement {\n}\n\nclass VB6UnlockStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "7531ee1fc9af77ce5c4f0e6a2f7c9945f7ca0af77d35d14dd1df42f0f300e9b3"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6DeleteSettingStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 48,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 81,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6DeleteSettingStmt : VB6PsiElement {\n}\n\nclass VB6DeleteSettingStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "71d606017b20922f566f7fa8773d06bdcba5232c686acc6046f7df1f9b8b1ad7"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/conditional/VB6BlockIfThenElse.kt",
      "language": "kotlin",
      "line": 13,
      "offset": 77,
      "length": 3,
      "code": {
        "startLine": 11,
        "length": 3,
        "offset": 110,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6BlockIfThenElse : VB6PsiElement, VB6EnclosingTransparentBlocks {\n}\n\nclass VB6BlockIfThenElseImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "d95b7e2f2435e807bce4b965697d8f0c4ab15198dd78e7e26b94c9b8ec938a3d"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/conditional/VB6ElseBlockStmt.kt",
      "language": "kotlin",
      "line": 8,
      "offset": 44,
      "length": 3,
      "code": {
        "startLine": 6,
        "length": 3,
        "offset": 77,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6ElseBlockStmt : VB6PsiElement {\n}\n\nclass VB6ElseBlockStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "05f7d96b73696860993184b0986b5c08578bc0f891674ebb35980e7fab8bfaba"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/call/VB6BlockCall.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 40,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 73,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6BlockCall : VB6PsiElement {\n}\n\nclass VB6BlockCallImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "737f5fad0b23ffc61488b404a7f20a38a58ce8ce8bc72fa152879adf47581a9d"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/call/VB6InlineProcedureOrArrayCall.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 57,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 90,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6InlineProcedureOrArrayCall : VB6AtomicCall {\n}\n\nclass VB6InlineProcedureOrArrayCallImpl(node: ASTNode) : VB6PsiNode(node), VB6InlineProcedureOrArrayCall {"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "1cd83fb621e13e9e93778ea77882e451271248bca96165c9876a859481995a96"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/call/VB6InlineDictionaryCall.kt",
      "language": "kotlin",
      "line": 8,
      "offset": 51,
      "length": 3,
      "code": {
        "startLine": 6,
        "length": 3,
        "offset": 84,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6InlineDictionaryCall : VB6PsiElement {\n}\n\nclass VB6InlineDictionaryCallImpl(node: ASTNode) : VB6PsiNode(node), VB6InlineDictionaryCall {"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "77c3e46fd95b5663ade77717f74d149c3f388f8d2188c5c19a30e5b164b85db6"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/call/VB6ExplicitCallStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 47,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 80,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6ExplicitCallStmt : VB6PsiElement {\n}\n\nclass VB6ExplicitCallStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "f90e1ff80fd35ac7b1f74f811a144238f62e9ba3bc6b519177ecbdbd433cac3d"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/conditional/VB6ThenBlockStmt.kt",
      "language": "kotlin",
      "line": 8,
      "offset": 44,
      "length": 3,
      "code": {
        "startLine": 6,
        "length": 3,
        "offset": 77,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6ThenBlockStmt : VB6PsiElement {\n}\n\nclass VB6ThenBlockStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "2f8cca2e60ea270eb2e6a4b1ad112f01744119f32cbd6cde397a8c7a9e1f3d3a"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6InputStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 40,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 73,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6InputStmt : VB6PsiElement {\n}\n\nclass VB6InputStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "47bff7a99b301e8cde77b165ba77074a81b233a09148f8a763dca234c2d153d4"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6CloseStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 40,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 73,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6CloseStmt : VB6PsiElement {\n}\n\nclass VB6CloseStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "1a34fc4e56541044b32328bb1954dd7f3ed2a1c059f1300225d88a92b12f5ef6"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/module/VB6EventStmt.kt",
      "language": "kotlin",
      "line": 25,
      "offset": 26,
      "length": 3,
      "code": {
        "startLine": 23,
        "length": 3,
        "offset": 83,
        "surroundingCode": "        VB6NamedElementOwner,\n        VB6VisibilityOwner,\n        VB6ArgumentOwner {\n}\n\nclass VB6EventStmtImpl(node: ASTNode) : VB6PsiNode(node), VB6EventStmt {"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "604406e6d6839e53e6f424f261ec7c72bb3a830dee28a88b548f3ba50f69ecd2"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/declarations/VB6ProcedureDeclaration.kt",
      "language": "kotlin",
      "line": 10,
      "offset": 28,
      "length": 3,
      "code": {
        "startLine": 8,
        "length": 3,
        "offset": 83,
        "surroundingCode": "        VB6NamedElementOwner,\n        VB6ArgumentOwner,\n        VB6VisibilityOwner {\n}"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "acdbade70e8c72b14a6624831f920f7a8f47d11ee8b27dd9dc3d06fa564c2925"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6MacroStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 40,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 73,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6MacroStmt : VB6PsiElement {\n}\n\n"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "74d0a6a8f9e914fc1ecf90fbe2919c0bde67f5538f97f4b6677170930693a9c8"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6MidStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 38,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 71,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6MidStmt : VB6PsiElement {\n}\n\nclass VB6MidStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "d7fb9ac49030d82c2896332b5aae2eb43308ed7b461ae7708f8efe589f551841"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/conditional/VB6InlineIfThenElse.kt",
      "language": "kotlin",
      "line": 8,
      "offset": 47,
      "length": 3,
      "code": {
        "startLine": 6,
        "length": 3,
        "offset": 80,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6InlineIfThenElse : VB6PsiElement {\n}\n\nclass VB6InlineIfThenElseImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "fdb0e6c6f776387161865fc66170fb8406f34fa229916cddf8498c4dcb9216ff"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6UnloadStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 41,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 74,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6UnloadStmt : VB6PsiElement {\n}\n\nclass VB6UnloadStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "0ddc1e32fa696124feb989a04eac68c231335cab0813a969462d425f1a1ee6dc"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6AppactivateStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 46,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 79,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6AppactivateStmt : VB6PsiElement {\n}\n\nclass VB6AppactivateStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "8f67dd4a959d8c58ea3815ba9e227163a7e1492df488348df4f68b7ac955667c"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/call/VB6DictionaryCallStmt.kt",
      "language": "kotlin",
      "line": 5,
      "offset": 49,
      "length": 3,
      "code": {
        "startLine": 3,
        "length": 3,
        "offset": 119,
        "surroundingCode": "import com.github.tyrrx.vb6language.psi.tree.definition.VB6PsiElement\n\ninterface VB6DictionaryCallStmt : VB6PsiElement {\n}"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "4a6e4d772cc744676cf01f06f5b8564c2d36e798b53fe2f3e9791606d646c2fb"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/conditional/VB6IfElseBlockStmt.kt",
      "language": "kotlin",
      "line": 12,
      "offset": 62,
      "length": 3,
      "code": {
        "startLine": 10,
        "length": 3,
        "offset": 95,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6IfElseBlockStmt : VB6TransparentBlockScopeOwner {\n}\n\nclass VB6IfElseBlockStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "0c8c156e3ab7621d9d2ec6509a24a57a1d87c4b4a12125b1aceca9c49db8f244"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/call/VB6ArgCall.kt",
      "language": "kotlin",
      "line": 5,
      "offset": 38,
      "length": 3,
      "code": {
        "startLine": 3,
        "length": 3,
        "offset": 108,
        "surroundingCode": "import com.github.tyrrx.vb6language.psi.tree.definition.VB6PsiElement\n\ninterface VB6ArgCall : VB6PsiElement {\n}"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "627ff258a54cd2222e12a8293ce9ddffe0007804c58192497a1ed248180f2f5f"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6NameStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 39,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 72,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6NameStmt : VB6PsiElement {\n}\n\nclass VB6NameStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "776b291acbc418bf206a3444d254ef693260416ed13062bd6427340afae1cf60"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6SeekStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 39,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 72,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6SeekStmt : VB6PsiElement {\n}\n\nclass VB6SeekStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "6f9f5df2ffb341918d05b889a1b52d6b308159b19652271b12e69bca79e30715"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/call/VB6AtomicBlockCall.kt",
      "language": "kotlin",
      "line": 13,
      "offset": 86,
      "length": 3,
      "code": {
        "startLine": 11,
        "length": 3,
        "offset": 119,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6AtomicBlockCall : VB6AtomicCall, VB6ReferenceFactory, VB6ReferenceOwner {\n}\n\nclass VB6AtomicBlockCallImpl(node: ASTNode) : VB6PsiNode(node), VB6AtomicBlockCall {"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "e5ef21e28e78bb661549e680f9069679ddd5b587ff3bb9cd33f89d7de05d68d8"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6SetStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 38,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 71,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6SetStmt : VB6PsiElement {\n}\n\nclass VB6SetStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "4d187393f4cc86bd9788a24d8b11f65af91f950be57ddd70f6f9de98d98be109"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6GetStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 38,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 71,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6GetStmt : VB6PsiElement {\n}\n\nclass VB6GetStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "0cd515ba1381bbd74447a71c98c040a5bbcde2d860d24a595bc523302214179b"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/declarations/VB6VariableDeclaration.kt",
      "language": "kotlin",
      "line": 3,
      "offset": 55,
      "length": 3,
      "code": {
        "startLine": 1,
        "length": 3,
        "offset": 109,
        "surroundingCode": "package com.github.tyrrx.vb6language.psi.declarations\n\ninterface VB6VariableDeclaration: VB6ValueDeclaration {\n}"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "9ed2d16f53282c41a7e13043a299cee29af612f8a896f3d76f7ac06525f107cf"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/conditional/VB6SelectCaseStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 45,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 78,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6SelectCaseStmt : VB6PsiElement {\n}\n\nclass VB6SelectCaseStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "4e2ef28836673caae857c9117052df2596d96c3ed406e282afe2adf60d3ac5b7"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/declarations/VB6ValueDeclaration.kt",
      "language": "kotlin",
      "line": 8,
      "offset": 26,
      "length": 3,
      "code": {
        "startLine": 6,
        "length": 3,
        "offset": 86,
        "surroundingCode": "interface VB6ValueDeclaration:\n        VB6NamedElementOwner,\n        VB6TypeInferable {\n}"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "42733ab0757ff2a0876a3a6a3d325db9e8554c23fe24b541b1f463a73553227a"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6ResetStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 40,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 73,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6ResetStmt : VB6PsiElement {\n}\n\nclass VB6ResetStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "f6c8108b1adc600be0598bd5ba74c252de4a4465327936eba858b070528c5ba8"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6WithStmt.kt",
      "language": "kotlin",
      "line": 14,
      "offset": 70,
      "length": 3,
      "code": {
        "startLine": 12,
        "length": 3,
        "offset": 103,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6WithStmt : VB6TransparentBlockScopeOwner, VB6PsiElement {\n}\n\nclass VB6WithStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "105812a648bd7454f2d367acfa7a974dc0715b5033024422b6a409e63834b751"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/module/VB6DeclareFunction.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 69,
      "length": 4,
      "code": {
        "startLine": 7,
        "length": 4,
        "offset": 102,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6DeclareFunction : VB6PsiElement, VB6TypeHintOwnerMixin {\n\n}\n\nclass VB6DeclareFunctionImpl(node: ASTNode) : VB6PsiNode(node), VB6DeclareFunction {"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "bf52a8754399e07f001f0981d050b3123ad751db53d452ea0ec7d7ce4be9cae5"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/identifier/VB6Identifier.kt",
      "language": "kotlin",
      "line": 17,
      "offset": 43,
      "length": 3,
      "code": {
        "startLine": 15,
        "length": 3,
        "offset": 78,
        "surroundingCode": "import com.intellij.psi.PsiElement\n\ninterface VB6Identifier : VB6NamedElement {\n}\n\nclass VB6IdentifierImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "9f4982f747f3d6fdd062040763b6019c755b9c890f2dbd35d98f29d11df85169"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6OpenStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 39,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 72,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6OpenStmt : VB6PsiElement {\n}\n\nclass VB6OpenStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "fbe04d78131c6bd042589c3989001e13b17957f8f90bbb65a60384c8951c9fd3"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/scope/VB6BlockScopeOwner.kt",
      "language": "kotlin",
      "line": 5,
      "offset": 59,
      "length": 3,
      "code": {
        "startLine": 3,
        "length": 3,
        "offset": 118,
        "surroundingCode": "import com.github.tyrrx.vb6language.psi.base.VB6BlockOwner\n\ninterface VB6BlockScopeOwner: VB6ScopeNode, VB6BlockOwner {\n}"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "59d2f391d16681810cc7ca5389b86f7e7a5f76bd91b1b08fb616e953ea726610"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6ReturnStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 41,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 74,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6ReturnStmt : VB6PsiElement {\n}\n\nclass VB6ReturnStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "743ac8d143db91e6ef92f89d14e5b6a32add073e26f205b653da7f23a5de710f"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/call/VB6ArgsCall.kt",
      "language": "kotlin",
      "line": 5,
      "offset": 39,
      "length": 3,
      "code": {
        "startLine": 3,
        "length": 3,
        "offset": 109,
        "surroundingCode": "import com.github.tyrrx.vb6language.psi.tree.definition.VB6PsiElement\n\ninterface VB6ArgsCall : VB6PsiElement {\n}"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "10d17983eaa7364cc9eadbe73cb978f42d4f081e6ccca7f3c6fcf4502b623342"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6OnErrorStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 42,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 75,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6OnErrorStmt : VB6PsiElement {\n}\n\nclass VB6OnErrorStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "99e6854ddd0abbd8a0337b8b37aaa95c7825313d5ec6e19513d65c5c1552283f"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6SavepictureStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 46,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 79,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6SavepictureStmt : VB6PsiElement {\n}\n\nclass VB6SavepictureStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "282739d0ed8c46c4e04d779a140e664f563a3185431d29c1b896e552d0f3d85c"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/identifier/VB6AmbiguousKeyword.kt",
      "language": "kotlin",
      "line": 8,
      "offset": 46,
      "length": 3,
      "code": {
        "startLine": 6,
        "length": 3,
        "offset": 79,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6AmbiguousKeyword: VB6PsiElement {\n}\n\nclass VB6AmbiguousKeywordImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "35f2279545bd18798eb65c1f829c3b36726088c96522a313023627b7c34c4dbf"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/conditional/VB6IfElseIfBlockStmt.kt",
      "language": "kotlin",
      "line": 12,
      "offset": 64,
      "length": 3,
      "code": {
        "startLine": 10,
        "length": 3,
        "offset": 97,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6IfElseIfBlockStmt : VB6TransparentBlockScopeOwner {\n}\n\nclass VB6IfElseIfBlockStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "97167169a46778b06feee2daf269a3d49b01d90c06d573f9f0bf71d9bcf41714"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6ExitStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 39,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 72,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6ExitStmt : VB6PsiElement {\n}\n\nclass VB6ExitStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "de1db7d9022450ed0bbce1e80457d0a5f59be2e82c6370bf0ebccb07ccc47e32"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/declarations/VB6FileNumberDeclaration.kt",
      "language": "kotlin",
      "line": 3,
      "offset": 36,
      "length": 3,
      "code": {
        "startLine": 1,
        "length": 3,
        "offset": 90,
        "surroundingCode": "package com.github.tyrrx.vb6language.psi.declarations\n\ninterface VB6FileNumberDeclaration {\n}"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "dbc766ae3f36bc5135742eb4857305917cad8d2137cdaed6be9041c85e01d671"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6TimeStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 39,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 72,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6TimeStmt : VB6PsiElement {\n}\n\nclass VB6TimeStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "f9b2b92c26c7e1aa2302e3cba3d60accfb34367720d6ed4037f065f0381840b0"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6DateStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 39,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 72,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6DateStmt : VB6PsiElement {\n}\n\nclass VB6DateStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "cf895b8817e445e3500939eda8bfd690af0ef6c7e3a8999301deb0f4ad86decc"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6MkdirStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 40,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 73,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6MkdirStmt : VB6PsiElement {\n}\n\nclass VB6MkdirStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "0c1f04b93c2ee2d34e5ee6fb55eaf8129fadc8f333ff5fadf469af1a92337a03"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6LoadStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 39,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 72,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6LoadStmt : VB6PsiElement {\n}\n\nclass VB6LoadStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "9d38ef23409f8c05b6403af3cec0f99ed9725df51a98fb72c942e19be2ef8936"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6GoSubStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 40,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 73,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6GoSubStmt : VB6PsiElement {\n}\n\nclass VB6GoSubStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "efcdb5f58ce484cccc81beb26b443fb1106aba59799ce231091193f77724e0a6"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6StopStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 39,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 72,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6StopStmt : VB6PsiElement {\n}\n\nclass VB6StopStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "5baac8ef7b0795afbaf318770e02f3a2923d7ec844bbe4bf7a90abbbacb04b72"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6KillStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 39,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 72,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6KillStmt : VB6PsiElement {\n}\n\nclass VB6KillStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "7d59f2d30678840acbc82e6277a28e6768693668a3825ccd85f27ac0ce1d7e0c"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6PrintStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 40,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 73,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6PrintStmt : VB6PsiElement {\n}\n\n"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "ecf87a35cff7aedf780cc447d6911b5850b90f53ef3280e5491c20e87e305640"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/loops/VB6DoLoopStmt.kt",
      "language": "kotlin",
      "line": 16,
      "offset": 39,
      "length": 3,
      "code": {
        "startLine": 14,
        "length": 3,
        "offset": 83,
        "surroundingCode": "interface VB6DoLoopStmt :\n    VB6PsiElement,\n        VB6TransparentBlockScopeOwner {\n}\n\nclass VB6DoLoopStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "ea23f0d0f5a0f40da968bc77fa77f9954dba1e342f27a0258f953f17698a8614"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/loops/VB6WhileWendStmt.kt",
      "language": "kotlin",
      "line": 14,
      "offset": 75,
      "length": 3,
      "code": {
        "startLine": 12,
        "length": 3,
        "offset": 108,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6WhileWendStmt : VB6TransparentBlockScopeOwner, VB6PsiElement {\n}\n\nclass VB6WhileWendStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "78c6d0e26aed2429ca66a4ecb98d43bd0cf7624d45bc27b7281098b59f1def08"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6LineInputStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 44,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 77,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6LineInputStmt : VB6PsiElement {\n}\n\nclass VB6LineInputStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "0fc321241d61c93ae66c70079c34cf2f458f25f809cf48b7894918805e5d8bb1"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/type/VB6TypeElement.kt",
      "language": "kotlin",
      "line": 5,
      "offset": 49,
      "length": 3,
      "code": {
        "startLine": 3,
        "length": 3,
        "offset": 119,
        "surroundingCode": "import com.github.tyrrx.vb6language.psi.tree.definition.VB6PsiElement\n\nsealed interface VB6TypeElement : VB6PsiElement {\n}"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "53b873954291fcf3baa104ca5dc06bc1533c4a549ebe26a78c6c49aecbf866b3"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/type/VB6BaseType.kt",
      "language": "kotlin",
      "line": 13,
      "offset": 56,
      "length": 4,
      "code": {
        "startLine": 11,
        "length": 4,
        "offset": 91,
        "surroundingCode": "import com.intellij.psi.PsiElement\n\ninterface VB6BaseType: VB6TypeElement, VB6NamedElement {\n\n}\n\nclass VB6BaseTypeImpl(node: ASTNode) : VB6PsiNode(node), VB6BaseType {"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "8d2dc17a0671089f50dc76dfe6154a1ec298292f527acd25be9979e7936661a4"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6RsetStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 39,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 72,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6RsetStmt : VB6PsiElement {\n}\n\nclass VB6RsetStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "f6bddae5a42d1439007ac2dfdadd09f2719c0e51cbb601110585fab03ce036b5"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6SendkeysStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 43,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 76,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6SendkeysStmt : VB6PsiElement {\n}\n\nclass VB6SendkeysStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "29a4f68e7e1060c11e02caefe0c589f72c2d77017ba5f805da07e3bbffe6614b"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6OnGoSubStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 42,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 75,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6OnGoSubStmt : VB6PsiElement {\n}\n\nclass VB6OnGoSubStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "1683190492224b7edd15e3c8dcc99a8060ad6830ead4a50a804b347c5bf2471e"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6ChdirStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 40,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 73,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6ChdirStmt : VB6PsiElement {\n}\n\nclass VB6ChdirStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "7104716bf113789c9d23644eddc7dc9779775ba65b373ce329e4e5e71f1eed0b"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6GoToStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 39,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 72,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6GoToStmt : VB6PsiElement {\n}\n\n"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "3c5caa31c94f7f89a63aab3678d2e3972bdbae5e3f75875762b736e55a379cd6"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6LineLabel.kt",
      "language": "kotlin",
      "line": 14,
      "offset": 50,
      "length": 3,
      "code": {
        "startLine": 12,
        "length": 3,
        "offset": 85,
        "surroundingCode": "import com.intellij.psi.PsiElement\n\ninterface VB6LineLabel : VB6LineLabelDeclaration {\n}\n\nclass VB6LineLabelImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "27c880b466a106361908aba74450eca43d3fa9267bef468c98ed65e985290916"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6SetattrStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 42,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 75,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6SetattrStmt : VB6PsiElement {\n}\n\nclass VB6SetattrStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "7b92cef11eca6f307ad72c549e9adba9ecaf7603762845f5bf8ab1155fa33ed8"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/module/VB6PropertyLetStatement.kt",
      "language": "kotlin",
      "line": 17,
      "offset": 59,
      "length": 3,
      "code": {
        "startLine": 15,
        "length": 3,
        "offset": 94,
        "surroundingCode": "import com.intellij.psi.PsiElement\n\ninterface VB6PropertyLetStatement: VB6PropertyDeclaration {\n}\n\nclass VB6PropertyLetStatementImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "4984e76dd11ed10203d9023e1c1e551d51f476089fd97bff3383b42900b21c68"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6RedimStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 40,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 73,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6RedimStmt : VB6PsiElement {\n}\n\nclass VB6RedimStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "826b0180dd7f9e87e2894f6fa0a80fc90a987e834dd5249fc5ebb4a9c7c4d1a7"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/conditional/VB6IfConditionStmt.kt",
      "language": "kotlin",
      "line": 8,
      "offset": 46,
      "length": 3,
      "code": {
        "startLine": 6,
        "length": 3,
        "offset": 79,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6IfConditionStmt : VB6PsiElement {\n}\n\nclass VB6IfConditionStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "ee643c516d95af53c5a8e680b014e259423c81c67f585659781205e468a964ac"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6ResumeStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 41,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 74,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6ResumeStmt : VB6PsiElement {\n}\n\nclass VB6ResumeStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "d917f26ab5a7c4b6d9b2fe4be6a23c6f23e9df48ccd5a57392793d33da28d8b9"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6RmdirStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 40,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 73,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6RmdirStmt : VB6PsiElement {\n}\n\nclass VB6RmdirStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "470b8bfd67077669b7cec339730d6d07abc094181e478fd535d946f739a62c88"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6EraseStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 40,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 73,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6EraseStmt : VB6PsiElement {\n}\n\nclass VB6EraseStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "ab286887349e9c9596e3de7a7371fae2ef4b5a77d158b4ee50eae3f9dd8fa219"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/call/VB6AtomicInlineCall.kt",
      "language": "kotlin",
      "line": 12,
      "offset": 87,
      "length": 3,
      "code": {
        "startLine": 10,
        "length": 3,
        "offset": 120,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6AtomicInlineCall : VB6PsiElement, VB6ReferenceFactory, VB6ReferenceOwner {\n}\n\nclass VB6AtomicInlineCallImpl(node: ASTNode) : VB6PsiNode(node), VB6AtomicInlineCall {"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "14d246b861e37fda6e57e2defbc679d31574faed513ff99fb8ad227972c7f18c"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6SaveSettingStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 46,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 79,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6SaveSettingStmt : VB6PsiElement {\n}\n\nclass VB6SaveSettingStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "15649095df8d49ded933eca4e6b6f81ec26d5eccca60c8afc56f8aa41a7a3384"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6LockStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 39,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 72,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6LockStmt : VB6PsiElement {\n}\n\nclass VB6LockStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "5dee69b00458b32e4e539211091cc1b6d39405cc9f82795987aef3363be31b15"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/conditional/VB6IfThenElseStmt.kt",
      "language": "kotlin",
      "line": 12,
      "offset": 76,
      "length": 3,
      "code": {
        "startLine": 10,
        "length": 3,
        "offset": 109,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6IfThenElseStmt : VB6PsiElement, VB6EnclosingTransparentBlocks {\n}\n\nclass VB6IfThenElseStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "22281f620ed5f13614b865c136e6e3e12d0d43666e14bf7b8321a097db031618"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/scope/VB6TransparentBlockScopeOwner.kt",
      "language": "kotlin",
      "line": 5,
      "offset": 105,
      "length": 3,
      "code": {
        "startLine": 3,
        "length": 3,
        "offset": 164,
        "surroundingCode": "import com.github.tyrrx.vb6language.psi.base.VB6BlockOwner\n\ninterface VB6TransparentBlockScopeOwner : VB6BlockOwner, VB6ScopeNode, VB6EnclosingVisibleNamedElements {\n}"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "c279a6fcbb735f09bdc05932de06ebb70b506ca3784e6acebf431f1c016b79e2"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6RandomizeStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 44,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 77,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6RandomizeStmt : VB6PsiElement {\n}\n\nclass VB6RandomizeStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "38410fc506b6b6343a9376fcbec0a14de94e490072fa8aee9687c44499d0175b"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/declarations/VB6SubroutineDeclaration.kt",
      "language": "kotlin",
      "line": 3,
      "offset": 62,
      "length": 3,
      "code": {
        "startLine": 1,
        "length": 3,
        "offset": 116,
        "surroundingCode": "package com.github.tyrrx.vb6language.psi.declarations\n\ninterface VB6SubroutineDeclaration : VB6ProcedureDeclaration {\n}"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "583baf17e75888ff88fea1ff39d17d4db606b1075a712fce3342fdca52ad64a4"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/declarations/VB6LineLabelDeclaration.kt",
      "language": "kotlin",
      "line": 6,
      "offset": 72,
      "length": 3,
      "code": {
        "startLine": 4,
        "length": 3,
        "offset": 142,
        "surroundingCode": "import com.github.tyrrx.vb6language.psi.tree.definition.VB6PsiElement\n\ninterface VB6LineLabelDeclaration: VB6PsiElement, VB6NamedElementOwner {\n}"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "0a776b125f6619d5928b7df7a75aa8caa53b72482dc03f0b8f9949bd8b3d3e0d"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6BeepStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 39,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 72,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6BeepStmt : VB6PsiElement {\n}\n\nclass VB6BeepStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "7ad332ff92d99eea925a379c266f1c2b88e649bdbe288edcbdd63644cf87d588"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/module/VB6SubroutineStatement.kt",
      "language": "kotlin",
      "line": 25,
      "offset": 36,
      "length": 3,
      "code": {
        "startLine": 23,
        "length": 3,
        "offset": 96,
        "surroundingCode": "        VB6BlockScopeOwner,\n        VB6VisibilityOwnerMixin,\n        VB6IsStaticInChildrenMixin {\n}\n\nclass VB6SubroutineStatementImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "a0d098902e16e88e0015e66232d948ee90d3526bd989e962ed706996de79b052"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/module/VB6FunctionStatement.kt",
      "language": "kotlin",
      "line": 27,
      "offset": 31,
      "length": 4,
      "code": {
        "startLine": 25,
        "length": 4,
        "offset": 99,
        "surroundingCode": "        VB6VisibilityOwnerMixin,\n        VB6IsStaticInChildrenMixin,\n        VB6TypeHintOwnerMixin {\n\n}\n\nclass VB6FunctionStatementImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "6ba55c01d48f5b905ac113a703cca538f22e97b0052388f74cf04236750ca0cf"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/declarations/VB6FunctionDeclaration.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 28,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 86,
        "surroundingCode": "        VB6ProcedureDeclaration,\n        VB6TypeInferable,\n        VB6TypeClauseOwner {\n}"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "35dd981885d02393f7d46dc409fd4be85dc9b14767a0995f9692fb8b91775185"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6WriteStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 40,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 73,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6WriteStmt : VB6PsiElement {\n}\n\nclass VB6WriteStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "33127570e227866101f331973b066620089330872ac882741045d99bef6d3ff5"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/call/VB6InlineMemberCall.kt",
      "language": "kotlin",
      "line": 14,
      "offset": 93,
      "length": 3,
      "code": {
        "startLine": 12,
        "length": 3,
        "offset": 126,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6InlineMemberCall : VB6PsiElement, VB6MemberReferenceOwner, VB6ReferenceFactory {\n}\n\nclass VB6InlineMemberCallImpl(node: ASTNode) : VB6PsiNode(node), VB6InlineMemberCall {"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "45cb632b01010fb972884c005f84c8abe0b8c926d9c0def8077c7961418bd535"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6EndStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 38,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 71,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6EndStmt : VB6PsiElement {\n}\n\nclass VB6EndStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "77032c592efe74728f910e93cbb3160046251bf5c6b2776256d8782363daab0c"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/module/VB6PropertyGetStatement.kt",
      "language": "kotlin",
      "line": 23,
      "offset": 31,
      "length": 3,
      "code": {
        "startLine": 21,
        "length": 3,
        "offset": 86,
        "surroundingCode": "    VB6PropertyDeclaration,\n        VB6TypeClauseOwner,\n        VB6TypeHintOwnerMixin {\n}\n\nclass VB6PropertyGetStatementImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "eb5188aa69de1a6d7fa0f67653d72dec0ceb305bd4fc7371e07f1a64352e3d55"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/call/VB6InlineMembersCall.kt",
      "language": "kotlin",
      "line": 11,
      "offset": 58,
      "length": 3,
      "code": {
        "startLine": 9,
        "length": 3,
        "offset": 91,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6InlineMembersCall : VB6MemberReferenceChain {\n}\n\nclass VB6InlineMembersCallImpl(node: ASTNode) : VB6PsiNode(node), VB6InlineMembersCall {"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "c3b0632a8be233537515c8489377e4e294efa303e1c5ae6d8c5a90d5d1966912"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6OnGoToStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 41,
      "length": 4,
      "code": {
        "startLine": 7,
        "length": 4,
        "offset": 74,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6OnGoToStmt : VB6PsiElement {\n\n}\n\nclass VB6OnGoToStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "cb36987e556e109c0f9c9ccc9d63a4e4cd6929a15f48397f67dfaa8f6ed5e3db"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6ChdriveStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 42,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 75,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6ChdriveStmt : VB6PsiElement {\n}\n\n"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "f6fc48340e624a27b6acbd4b9bf15b69e8ff36a675a36ccfc169f18f2780cb3f"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/conditional/VB6IfBlockStmt.kt",
      "language": "kotlin",
      "line": 12,
      "offset": 58,
      "length": 3,
      "code": {
        "startLine": 10,
        "length": 3,
        "offset": 91,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6IfBlockStmt : VB6TransparentBlockScopeOwner {\n}\n\nclass VB6IfBlockStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "24a22ae251c5f0da26aa81575e57baa6f375db09cb420ce599b45f457802ccb9"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6PutStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 38,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 71,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6PutStmt : VB6PsiElement {\n}\n\nclass VB6PutStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "14cb540388d90979b823df6ef214f445f45830f502331a4ab286021271c7fa45"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6ImplementsStmt.kt",
      "language": "kotlin",
      "line": 12,
      "offset": 85,
      "length": 3,
      "code": {
        "startLine": 10,
        "length": 3,
        "offset": 118,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6ImplementsStmt : VB6PsiElement, VB6ReferenceOwner, VB6ReferenceFactory {\n}\n\nclass VB6ImplementsStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "710a8d310f1ccde44305adc73f5fe933fb68855e8906076c70abd163b6125288"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/declarations/VB6EventDeclaration.kt",
      "language": "kotlin",
      "line": 3,
      "offset": 31,
      "length": 3,
      "code": {
        "startLine": 1,
        "length": 3,
        "offset": 85,
        "surroundingCode": "package com.github.tyrrx.vb6language.psi.declarations\n\ninterface VB6EventDeclaration {\n}"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "3aad4ae4b497e01891652e573c568afc92f21a2b19e5225b55792832e928b88d"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/declarations/VB6ConstantDeclaration.kt",
      "language": "kotlin",
      "line": 3,
      "offset": 56,
      "length": 4,
      "code": {
        "startLine": 1,
        "length": 4,
        "offset": 110,
        "surroundingCode": "package com.github.tyrrx.vb6language.psi.declarations\n\ninterface VB6ConstantDeclaration : VB6ValueDeclaration {\n\n}"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "299393ebf490629994a68fc91dc33aed2071ed5eb5f9021062867bdee9830851"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/blockStmt/VB6RaiseEventStmt.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 45,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 78,
        "surroundingCode": "import com.intellij.lang.ASTNode\n\ninterface VB6RaiseEventStmt : VB6PsiElement {\n}\n\nclass VB6RaiseEventStmtImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "7ea46051294b11e1347569a712fa4f0c6186db7c420e052a413eec9023a96270"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Replace empty class body",
  "severity": "Info",
  "comment": "Redundant empty class body",
  "detailsInfo": "Reports declarations of classes and objects with an empty body.\n\nUse the 'Remove redundant empty class body' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      class EmptyA() {} // <== empty body\n\n      class EmptyB {\n          companion object {} // <== empty body\n      }\n\n      fun emptyC() {\n         object {} // <== anonymous object, it's ok (not reported)\n      }\n\nAfter the quick fix is applied:\n\n\n      class EmptyA()\n\n      class EmptyB {\n          companion object\n      }\n\n      fun emptyC() {\n         object {}\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/module/VB6PropertySetStatement.kt",
      "language": "kotlin",
      "line": 17,
      "offset": 60,
      "length": 3,
      "code": {
        "startLine": 15,
        "length": 3,
        "offset": 95,
        "surroundingCode": "import com.intellij.psi.PsiElement\n\ninterface VB6PropertySetStatement : VB6PropertyDeclaration {\n}\n\nclass VB6PropertySetStatementImpl(node: ASTNode) : VB6PsiNode(node),"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RemoveEmptyClassBody"
  },
  "hash": "6522841cf7a2ff391213befb0f141b3040b236ddfd06b49e77c1b95ca327577b"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Redundant overriding method",
  "severity": "Moderate",
  "comment": "Redundant overriding method",
  "detailsInfo": "Reports redundant overriding declarations.\n\n\nAn override can be omitted if it does not modify the inherited signature semantics, for example, by changing visibility.\n\n**Example:**\n\n\n      open class Foo {\n          open fun singleExpression() {\n          }\n      }\n\n      class Bar : Foo() {\n          override fun singleExpression() = super.singleExpression()\n      }\n\nAfter the quick-fix is applied:\n\n\n      class Bar : Foo() {\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/reference/references/TypeMemberReference.kt",
      "language": "kotlin",
      "line": 81,
      "offset": 5,
      "length": 12,
      "code": {
        "startLine": 79,
        "length": 12,
        "offset": 11,
        "surroundingCode": "    }\n\n    override fun getVariants(): Array<Any> {\n        return super.getVariants()\n    }"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "KotlinRedundantOverride"
  },
  "hash": "e5e03559521f3f0a10da2a8c20086fdc37c1628a9d87af1d1de6f730a9c892e5"
},{
  "tool": "Code Inspection",
  "category": "Internationalization",
  "type": "Incorrect string capitalization",
  "severity": "High",
  "comment": "String 'Detach projects' is not properly capitalized. It should have title capitalization",
  "detailsInfo": "Reports strings in method parameters and return values annotated with `@Nls` and having the capitalization parameter to conform to capitalization rules existing in most platform UI guidelines.\n\n**Example:**\n\n\n      void setTitle(@NlsContexts.DialogTitle String title) {}\n      setTitle(\"This is sentence capitalization but should be title\"); \n\nAfter the quick-fix is applied:\n\n\n      setTitle(\"This Is Sentence Capitalization but Should Be Title\"); \n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/actions/VB6DetachProjectAction.kt",
      "language": "kotlin",
      "line": 26,
      "offset": 112,
      "length": 17,
      "code": {
        "startLine": 24,
        "length": 17,
        "offset": 114,
        "surroundingCode": "}\n\nclass DetachList(values: List<VB6Project>, val onChosen: (VB6Project) -> Unit) : BaseListPopupStep<VB6Project>(\"Detach projects\", values) {\n\n    override fun getTextFor(value: VB6Project): String {"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "DialogTitleCapitalization"
  },
  "hash": "2d80caf52d8791115bb94f2299f54a80cfe63bf2467024b1cb9cf5825fb9d7b5"
},{
  "tool": "Code Inspection",
  "category": "Internationalization",
  "type": "Incorrect string capitalization",
  "severity": "High",
  "comment": "String 'Failed to attach visual basic 6.0 project' is not properly capitalized. It should have title capitalization",
  "detailsInfo": "Reports strings in method parameters and return values annotated with `@Nls` and having the capitalization parameter to conform to capitalization rules existing in most platform UI guidelines.\n\n**Example:**\n\n\n      void setTitle(@NlsContexts.DialogTitle String title) {}\n      setTitle(\"This is sentence capitalization but should be title\"); \n\nAfter the quick-fix is applied:\n\n\n      setTitle(\"This Is Sentence Capitalization but Should Be Title\"); \n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/actions/VB6AttachProjectAction.kt",
      "language": "kotlin",
      "line": 39,
      "offset": 53,
      "length": 43,
      "code": {
        "startLine": 37,
        "length": 43,
        "offset": 156,
        "surroundingCode": "    private fun showError(error: Throwable) {\n        ApplicationManager.getApplication().invokeLater {\n            Messages.showErrorDialog(error.message, \"Failed to attach visual basic 6.0 project\")\n        }\n    }"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "DialogTitleCapitalization"
  },
  "hash": "fc48b9e59cdfe698b27f523b8dee5d72fc3c016db30efb9a3ed503eb142b5f75"
},{
  "tool": "Code Inspection",
  "category": "Internationalization",
  "type": "Incorrect string capitalization",
  "severity": "High",
  "comment": "String 'Select visual basic 6.0 project file' is not properly capitalized. It should have title capitalization",
  "detailsInfo": "Reports strings in method parameters and return values annotated with `@Nls` and having the capitalization parameter to conform to capitalization rules existing in most platform UI guidelines.\n\n**Example:**\n\n\n      void setTitle(@NlsContexts.DialogTitle String title) {}\n      setTitle(\"This is sentence capitalization but should be title\"); \n\nAfter the quick-fix is applied:\n\n\n      setTitle(\"This Is Sentence Capitalization but Should Be Title\"); \n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/actions/VB6AttachProjectAction.kt",
      "language": "kotlin",
      "line": 19,
      "offset": 24,
      "length": 38,
      "code": {
        "startLine": 17,
        "length": 38,
        "offset": 169,
        "surroundingCode": "        val descriptor = FileChooserDescriptorFactory.createSingleFileNoJarsDescriptor()\n            .withFileFilter { it.name.endsWith(\".vbp\") }\n            .withTitle(\"Select visual basic 6.0 project file\")\n            .apply { isForcedToUseIdeaFileChooser = true }\n"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "DialogTitleCapitalization"
  },
  "hash": "a06adbb9be59f537786bbe0c6325352db35df18d1669a3d62c422d6adb0bb240"
},{
  "tool": "Code Inspection",
  "category": "Internationalization",
  "type": "Incorrect string capitalization",
  "severity": "High",
  "comment": "String 'Invalid file type' is not properly capitalized. It should have title capitalization",
  "detailsInfo": "Reports strings in method parameters and return values annotated with `@Nls` and having the capitalization parameter to conform to capitalization rules existing in most platform UI guidelines.\n\n**Example:**\n\n\n      void setTitle(@NlsContexts.DialogTitle String title) {}\n      setTitle(\"This is sentence capitalization but should be title\"); \n\nAfter the quick-fix is applied:\n\n\n      setTitle(\"This Is Sentence Capitalization but Should Be Title\"); \n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/actions/VB6AttachProjectAction.kt",
      "language": "kotlin",
      "line": 26,
      "offset": 85,
      "length": 19,
      "code": {
        "startLine": 24,
        "length": 19,
        "offset": 128,
        "surroundingCode": "\n        if (!file.name.endsWith(\".vbp\")) {\n            Messages.showErrorDialog(\"Expected visual basic 6.0, got ${file.name}\", \"Invalid file type\")\n            return\n        }"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "DialogTitleCapitalization"
  },
  "hash": "41d1765496c5fa96215672419a97d3dbee905053b51a647fc09c97e0f4a908a1"
},{
  "tool": "Code Inspection",
  "category": "Internationalization",
  "type": "Incorrect string capitalization",
  "severity": "High",
  "comment": "String 'Already attached project' is not properly capitalized. It should have title capitalization",
  "detailsInfo": "Reports strings in method parameters and return values annotated with `@Nls` and having the capitalization parameter to conform to capitalization rules existing in most platform UI guidelines.\n\n**Example:**\n\n\n      void setTitle(@NlsContexts.DialogTitle String title) {}\n      setTitle(\"This is sentence capitalization but should be title\"); \n\nAfter the quick-fix is applied:\n\n\n      setTitle(\"This Is Sentence Capitalization but Should Be Title\"); \n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/actions/VB6AttachProjectAction.kt",
      "language": "kotlin",
      "line": 31,
      "offset": 103,
      "length": 26,
      "code": {
        "startLine": 29,
        "length": 26,
        "offset": 166,
        "surroundingCode": "\n        if (project.vb6Workspace.isAttachedVB6Project(file)) {\n            Messages.showErrorDialog(\"The visual basic 6.0 project ${file.name} is already attached\", \"Already attached project\")\n            return\n        }"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "DialogTitleCapitalization"
  },
  "hash": "a3e39e3986b1a0fd3ad795bab6490874666f061c23a5d71f08c6d992f9f55cf5"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Property \"pattern\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/completion/CompletionPatterns.kt",
      "language": "kotlin",
      "line": 20,
      "offset": 9,
      "length": 7,
      "code": {
        "startLine": 18,
        "length": 7,
        "offset": 11,
        "surroundingCode": "}\n\nval Int.pattern: PsiElementPattern.Capture<PsiElement>\n    get() = psiElement().withElementType(VB6IElementTypes.tokens[this])\n"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "2c1803102774bde583cb98161cecb287d44dd0b15746e0ac5462c4405774ebe8"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Property \"vb6LanguagePsiElement\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/completion/CompletionPatterns.kt",
      "language": "kotlin",
      "line": 41,
      "offset": 9,
      "length": 21,
      "code": {
        "startLine": 39,
        "length": 21,
        "offset": 37,
        "surroundingCode": "\nobject CompletionPatterns {\n    val vb6LanguagePsiElement = PlatformPatterns.psiElement().withLanguage(VB6Language.INSTANCE)\n    val afterAsNew = psiElement().afterLeaf(afterAll(VB6IElementTypes.AS, VB6IElementTypes.NEW).or(VB6IElementTypes.AS.pattern))\n    val moduleBodyElement: PsiElementPattern.Capture<PsiElement> = psiElement().withSuperParent(2, genericPsiElement<VB6ModuleBodyImpl>())"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "94a0201ab698702c588c95fb5c5ac4f9fc65d75637c52d92ea841ef7ad8697a0"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Object \"CompletionPatterns\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/completion/CompletionPatterns.kt",
      "language": "kotlin",
      "line": 40,
      "offset": 8,
      "length": 18,
      "code": {
        "startLine": 38,
        "length": 18,
        "offset": 9,
        "surroundingCode": "\n\nobject CompletionPatterns {\n    val vb6LanguagePsiElement = PlatformPatterns.psiElement().withLanguage(VB6Language.INSTANCE)\n    val afterAsNew = psiElement().afterLeaf(afterAll(VB6IElementTypes.AS, VB6IElementTypes.NEW).or(VB6IElementTypes.AS.pattern))"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "b3f71dbcd903c52fd7d7c90b27a68baa69590e44d809b5fea821ada202b66094"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Property \"afterAsNew\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/completion/CompletionPatterns.kt",
      "language": "kotlin",
      "line": 42,
      "offset": 9,
      "length": 10,
      "code": {
        "startLine": 40,
        "length": 10,
        "offset": 133,
        "surroundingCode": "object CompletionPatterns {\n    val vb6LanguagePsiElement = PlatformPatterns.psiElement().withLanguage(VB6Language.INSTANCE)\n    val afterAsNew = psiElement().afterLeaf(afterAll(VB6IElementTypes.AS, VB6IElementTypes.NEW).or(VB6IElementTypes.AS.pattern))\n    val moduleBodyElement: PsiElementPattern.Capture<PsiElement> = psiElement().withSuperParent(2, genericPsiElement<VB6ModuleBodyImpl>())\n"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "6b824127602de4ff5d8af2bffde4c74ccb44bca8f28aa4864a08e7b0e2c47f6d"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Class \"EventReference\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/reference/references/EventReference.kt",
      "language": "kotlin",
      "line": 8,
      "offset": 7,
      "length": 14,
      "code": {
        "startLine": 6,
        "length": 14,
        "offset": 42,
        "surroundingCode": "import com.intellij.psi.PsiElement\n\nclass EventReference(\n        override val myReferenceOwner: VB6ReferenceOwner,\n        override val referencingNamedElement: VB6NamedElement,"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "30216534dc1ba80ce575b8fd74387e398b5e06d1b8a5aa7df46430749275b0b4"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Class \"VB6ModuleBodyContributor\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/completion/VB6ModuleBodyContributor.kt",
      "language": "kotlin",
      "line": 18,
      "offset": 7,
      "length": 24,
      "code": {
        "startLine": 16,
        "length": 24,
        "offset": 57,
        "surroundingCode": " * Adds structures for module body completion.\n */\nclass VB6ModuleBodyContributor : CompletionContributor() {\n\n    /**"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "f76f2af6d5da304ec713cca09270ce72aa9ade1bd1ea694a14bc9ce08d16a937"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Interface \"VB6ArgCall\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/call/VB6ArgCall.kt",
      "language": "kotlin",
      "line": 5,
      "offset": 11,
      "length": 10,
      "code": {
        "startLine": 3,
        "length": 10,
        "offset": 81,
        "surroundingCode": "import com.github.tyrrx.vb6language.psi.tree.definition.VB6PsiElement\n\ninterface VB6ArgCall : VB6PsiElement {\n}"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "b77a371d2f0b2a9352931058a1b14bfb8ee57fa44225236552670cb53a4babd9"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Interface \"VB6ArgsCall\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/call/VB6ArgsCall.kt",
      "language": "kotlin",
      "line": 5,
      "offset": 11,
      "length": 11,
      "code": {
        "startLine": 3,
        "length": 11,
        "offset": 81,
        "surroundingCode": "import com.github.tyrrx.vb6language.psi.tree.definition.VB6PsiElement\n\ninterface VB6ArgsCall : VB6PsiElement {\n}"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "1eaae1bcc76079bd6edb5c5c372135d5f1746dd5e0e98ef651dd2494a7c2194a"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Interface \"VB6IdentifierFromChildrenMixin\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/mixins/VB6IdentifierFromChildrenMixin.kt",
      "language": "kotlin",
      "line": 7,
      "offset": 11,
      "length": 30,
      "code": {
        "startLine": 5,
        "length": 30,
        "offset": 80,
        "surroundingCode": "import com.github.tyrrx.vb6language.psi.utils.findFirstChildByTypeOf\n\ninterface VB6IdentifierFromChildrenMixin:\n        VB6NamedElementOwner {\n"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "b3b3ab9b82c5b37a9d15a62afa4252bf2970de55780db61c682d619ef6996487"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Property \"CONSTANT\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/highlighting/VisualBasic6SyntaxHighlighter.kt",
      "language": "kotlin",
      "line": 112,
      "offset": 13,
      "length": 8,
      "code": {
        "startLine": 110,
        "length": 8,
        "offset": 23,
        "surroundingCode": "        )\n\n        val CONSTANT = createTextAttributesKey(\n                \"VB6_CONSTANT\",\n                DefaultLanguageHighlighterColors.CONSTANT"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "afb3595d65652e7f47797e2024bc393494de9b2338269a7f830b5dc8877a75cc"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Property \"OPERATORS\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/highlighting/VisualBasic6SyntaxHighlighter.kt",
      "language": "kotlin",
      "line": 102,
      "offset": 13,
      "length": 9,
      "code": {
        "startLine": 100,
        "length": 9,
        "offset": 23,
        "surroundingCode": "        )\n\n        val OPERATORS = createTextAttributesKey(\n                \"VB6_OPERATOR\",\n                DefaultLanguageHighlighterColors.OPERATION_SIGN"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "9eb5cbb273594dcab75fec929ee108b61f4635edec9dda73aeed149ff4f6a982"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Property \"BRACES\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/highlighting/VisualBasic6SyntaxHighlighter.kt",
      "language": "kotlin",
      "line": 72,
      "offset": 13,
      "length": 6,
      "code": {
        "startLine": 70,
        "length": 6,
        "offset": 23,
        "surroundingCode": "        )\n\n        val BRACES = createTextAttributesKey(\n                \"VB6_BRACES\",\n                DefaultLanguageHighlighterColors.BRACES"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "bd072f2f44263a6aa4366683e560ccab66a47e3999a30ae3d3d1a7df5be35aa9"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Property \"DELIMITER\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/highlighting/VisualBasic6SyntaxHighlighter.kt",
      "language": "kotlin",
      "line": 87,
      "offset": 13,
      "length": 9,
      "code": {
        "startLine": 85,
        "length": 9,
        "offset": 23,
        "surroundingCode": "        )\n\n        val DELIMITER = createTextAttributesKey(\n                \"VB6_DELIMITER\",\n                DefaultLanguageHighlighterColors.INSTANCE_FIELD"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "ee038010b2ab2bd5f75f9a1f283247ed998c312c7376d3eb5a6802d75daf750b"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Property \"BACKGROUND\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/highlighting/VisualBasic6SyntaxHighlighter.kt",
      "language": "kotlin",
      "line": 57,
      "offset": 13,
      "length": 10,
      "code": {
        "startLine": 55,
        "length": 10,
        "offset": 25,
        "surroundingCode": "//        }\n\n        val BACKGROUND = createTextAttributesKey(\n                \"VB6_BACKGROUND\",\n                DefaultLanguageHighlighterColors.TEMPLATE_LANGUAGE_COLOR"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "5f05fa77a9b899170e067d7059334510b542349b613174bebb3dfa61b8edd02d"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Property \"FUNCTION_CALL\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/highlighting/VisualBasic6SyntaxHighlighter.kt",
      "language": "kotlin",
      "line": 127,
      "offset": 13,
      "length": 13,
      "code": {
        "startLine": 125,
        "length": 13,
        "offset": 23,
        "surroundingCode": "        )\n\n        val FUNCTION_CALL = createTextAttributesKey(\n                \"VB6_FUNCTION_CALL\",\n                DefaultLanguageHighlighterColors.FUNCTION_CALL"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "05524496da2511d0365cee296c9e2ae61392394ad208bc4187a7a5e3987c8bae"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Interface \"VB6FileNumberDeclaration\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/declarations/VB6FileNumberDeclaration.kt",
      "language": "kotlin",
      "line": 3,
      "offset": 11,
      "length": 24,
      "code": {
        "startLine": 1,
        "length": 24,
        "offset": 65,
        "surroundingCode": "package com.github.tyrrx.vb6language.psi.declarations\n\ninterface VB6FileNumberDeclaration {\n}"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "1965039585b5d183213e4b6f243457869fe30f2a866d02fd99908b08df5dd7c1"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"findOwnerRecursive\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/utils/FindOwner.kt",
      "language": "kotlin",
      "line": 7,
      "offset": 5,
      "length": 18,
      "code": {
        "startLine": 5,
        "length": 18,
        "offset": 40,
        "surroundingCode": "import com.intellij.psi.PsiElement\n\nfun findOwnerRecursive(element: PsiElement): PsiElement {\n    return when (element) {\n        is VB6NamedElementOwner -> element"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "b2da921cd22de706f2796bd7d4596adfedcfee470336812a38eb1ccf46a10579"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Property \"symbols\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/language/VB6TokenSets.kt",
      "language": "kotlin",
      "line": 287,
      "offset": 9,
      "length": 7,
      "code": {
        "startLine": 285,
        "length": 7,
        "offset": 15,
        "surroundingCode": "    )\n\n    val symbols: TokenSet = PSIElementTypeFactory.createTokenSet(\n            VB6Language.INSTANCE,\n            VisualBasic6Lexer.AMPERSAND,"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "f6f8c2aa2f5cca6f4c70d348c192a0f418ca4e8aa2c8346adee20f903d444cb2"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Property \"binaryOperators\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/language/VB6TokenSets.kt",
      "language": "kotlin",
      "line": 18,
      "offset": 13,
      "length": 15,
      "code": {
        "startLine": 16,
        "length": 15,
        "offset": 19,
        "surroundingCode": "    }\n\n        val binaryOperators: TokenSet = PSIElementTypeFactory.createTokenSet(VB6Language.INSTANCE,\n                VisualBasic6Lexer.ASSIGN,\n                VisualBasic6Lexer.IS,"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "fc704e43a0e75007773a06770bca790b929fcc741851a615499aa4005fa55e6f"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Property \"unaryPrefixOperators\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/language/VB6TokenSets.kt",
      "language": "kotlin",
      "line": 42,
      "offset": 13,
      "length": 20,
      "code": {
        "startLine": 40,
        "length": 20,
        "offset": 23,
        "surroundingCode": "        )\n\n        val unaryPrefixOperators: TokenSet = PSIElementTypeFactory.createTokenSet(VB6Language.INSTANCE,\n                VisualBasic6Lexer.NEW,\n                VisualBasic6Lexer.MINUS,"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "0593e83be6f026d50509e186702b3d652f685c6738ed29b872fcd136aad6adb0"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"findLiteralsInSubtree\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/utils/FindInSubtree.kt",
      "language": "kotlin",
      "line": 15,
      "offset": 5,
      "length": 21,
      "code": {
        "startLine": 13,
        "length": 21,
        "offset": 7,
        "surroundingCode": "}\n\nfun findLiteralsInSubtree(subtreeRoot: PsiElement): Collection<VB6Literal> {\n    return findPsiElementsInSubtree(subtreeRoot)\n}"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "2863e3c00324de7efa8c2dca99e06fa72af268fea2283dc617f6d0fbcc6f4ead"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"getModuleBodyStatementsByType\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/utils/FindInElements.kt",
      "language": "kotlin",
      "line": 5,
      "offset": 43,
      "length": 29,
      "code": {
        "startLine": 3,
        "length": 29,
        "offset": 116,
        "surroundingCode": "import com.github.tyrrx.vb6language.psi.tree.definition.module.VB6Module\n\ninline fun <reified TStatement> VB6Module.getModuleBodyStatementsByType() : List<TStatement> {\n    return moduleBody\n        ?.getStatements()"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "a156188f5c46d4c42573a83a59b218c5fdfaefb0083e03406ddbb62ff1ffbc86"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"findVB6Projects\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/project/VB6WorkspaceService.kt",
      "language": "kotlin",
      "line": 35,
      "offset": 9,
      "length": 15,
      "code": {
        "startLine": 33,
        "length": 15,
        "offset": 15,
        "surroundingCode": "    }\n\n    fun findVB6Projects(module: VB6Module): Iterable<VB6Project> {\n        return when (val file = module.containingFile) {\n            is VB6File -> findVB6Projects(file)"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "8aacec1b46e04dce5eb39d1c6981e9bdd476e8709bd56f8d84f4f57e7af1473f"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Class \"ModuleScope\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/scope/ModuleScope.kt",
      "language": "kotlin",
      "line": 7,
      "offset": 7,
      "length": 11,
      "code": {
        "startLine": 5,
        "length": 11,
        "offset": 89,
        "surroundingCode": "import com.github.tyrrx.vb6language.psi.tree.definition.module.namedElementOwners\n\nclass ModuleScope(private val module: VB6Module) : IModuleScope {\n\n    override val typeDeclarations: List<VB6TypeDeclaration>"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "7f76becb1f458094df5b007db60680f4165e264fcce0649eddde02a127fede9b"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Interface \"IVB6ProjectGroup\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/project/VB6ProjectGroup.kt",
      "language": "kotlin",
      "line": 3,
      "offset": 11,
      "length": 16,
      "code": {
        "startLine": 1,
        "length": 16,
        "offset": 56,
        "surroundingCode": "package com.github.tyrrx.vb6language.project\n\ninterface IVB6ProjectGroup {\n    val projects: Collection<VB6Project>\n}"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "28a37b72603cbb41253123356ea707a39d7174640467a60cb825811d2955cb58"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Property \"projects\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/project/VB6ProjectGroup.kt",
      "language": "kotlin",
      "line": 4,
      "offset": 9,
      "length": 8,
      "code": {
        "startLine": 2,
        "length": 8,
        "offset": 38,
        "surroundingCode": "\ninterface IVB6ProjectGroup {\n    val projects: Collection<VB6Project>\n}"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "d1d959cd223447e2e2edee24cb7c2d93a91b04b8ced930440ebf0111208c0f46"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Interface \"VB6ReturnTypeOwner\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/inference/VB6ReturnTypeOwner.kt",
      "language": "kotlin",
      "line": 6,
      "offset": 11,
      "length": 18,
      "code": {
        "startLine": 4,
        "length": 18,
        "offset": 87,
        "surroundingCode": "import com.github.tyrrx.vb6language.psi.tree.definition.type.VB6TypeElement\n\ninterface VB6ReturnTypeOwner {\n    fun getReturnAsTypeClause(): VB6AsTypeClause?\n    fun getReturnType(): VB6TypeElement? // Todo non nullable and resolve type from context"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "6817ce7f03427b42bf37718ca76159e64a55255fd3b5a5d7757352181bec98fa"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"getReturnAsTypeClause\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/inference/VB6ReturnTypeOwner.kt",
      "language": "kotlin",
      "line": 7,
      "offset": 9,
      "length": 21,
      "code": {
        "startLine": 5,
        "length": 21,
        "offset": 40,
        "surroundingCode": "\ninterface VB6ReturnTypeOwner {\n    fun getReturnAsTypeClause(): VB6AsTypeClause?\n    fun getReturnType(): VB6TypeElement? // Todo non nullable and resolve type from context\n}"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "fe1a4aeb3a319dbf29e4f8ba19d1c34fa13b4f91e8776284c08d18c0f4d41222"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"getReturnType\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/inference/VB6ReturnTypeOwner.kt",
      "language": "kotlin",
      "line": 8,
      "offset": 9,
      "length": 13,
      "code": {
        "startLine": 6,
        "length": 13,
        "offset": 89,
        "surroundingCode": "interface VB6ReturnTypeOwner {\n    fun getReturnAsTypeClause(): VB6AsTypeClause?\n    fun getReturnType(): VB6TypeElement? // Todo non nullable and resolve type from context\n}"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "9bae7c46ab0f0458c06bb8af3b452ed6ea2095637ed43e509d307b86195493fe"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Property \"tagName\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/project/VBPFileContext.kt",
      "language": "kotlin",
      "line": 4,
      "offset": 19,
      "length": 7,
      "code": {
        "startLine": 2,
        "length": 7,
        "offset": 51,
        "surroundingCode": "\nabstract class VBPFileContext {\n    class Tag(val tagName: String) : VBPFileContext()\n    class Default : VBPFileContext()\n"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "dcaf8b23191c1ec25e2621bedfc8e817d7b04a324dd06c0fbe050afd89f3a627"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"showError\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/actions/VB6AttachProjectAction.kt",
      "language": "kotlin",
      "line": 37,
      "offset": 17,
      "length": 9,
      "code": {
        "startLine": 35,
        "length": 9,
        "offset": 23,
        "surroundingCode": "    }\n\n    private fun showError(error: Throwable) {\n        ApplicationManager.getApplication().invokeLater {\n            Messages.showErrorDialog(error.message, \"Failed to attach visual basic 6.0 project\")"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "fe9f35bb95b166676a36ef50a5f82ab3283757fd0b6712ba554f819031135e9f"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"sections\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/documentation/StringBuilderExtensions.kt",
      "language": "kotlin",
      "line": 87,
      "offset": 26,
      "length": 8,
      "code": {
        "startLine": 85,
        "length": 8,
        "offset": 28,
        "surroundingCode": "}\n\ninline fun StringBuilder.sections(block: StringBuilder.() -> Unit) {\n    append(\"\\n\", DocumentationMarkup.SECTIONS_START)\n    block()"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "a593cf027bc3cfea18b9dc8167c955f595c9c4b6d44af5ed36be4992bf84ec57"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"content\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/documentation/StringBuilderExtensions.kt",
      "language": "kotlin",
      "line": 47,
      "offset": 26,
      "length": 7,
      "code": {
        "startLine": 45,
        "length": 7,
        "offset": 28,
        "surroundingCode": "}\n\ninline fun StringBuilder.content(block: () -> Unit) {\n    append(\"\\n\", DocumentationMarkup.CONTENT_START)\n    block()"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "3c2ecbb013a11e3b539c48ee22a0f92c97598fbb04e7cee9a0edc65de62498ed"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"section\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/documentation/StringBuilderExtensions.kt",
      "language": "kotlin",
      "line": 93,
      "offset": 26,
      "length": 7,
      "code": {
        "startLine": 91,
        "length": 7,
        "offset": 28,
        "surroundingCode": "}\n\ninline fun StringBuilder.section(title: String, block: StringBuilder.() -> Unit) {\n    append(DocumentationMarkup.SECTION_HEADER_START, title, \":\", DocumentationMarkup.SECTION_SEPARATOR, \"<p>\")\n    block()"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "450eb9251d3aae6c77667692efbbd27daef3a5a8c98d4938b47b63a8383c5643"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"code\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/documentation/StringBuilderExtensions.kt",
      "language": "kotlin",
      "line": 81,
      "offset": 26,
      "length": 4,
      "code": {
        "startLine": 79,
        "length": 4,
        "offset": 28,
        "surroundingCode": "}\n\ninline fun StringBuilder.code(block: () -> Unit) {\n    append(\"<code>\")\n    block()"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "f5f6c36cb308db3a9a172c8ef156e9daf2429d8a4682c7f262616ce109f39463"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"italic\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/documentation/StringBuilderExtensions.kt",
      "language": "kotlin",
      "line": 75,
      "offset": 26,
      "length": 6,
      "code": {
        "startLine": 73,
        "length": 6,
        "offset": 28,
        "surroundingCode": "}\n\ninline fun StringBuilder.italic(block: () -> Unit) {\n    append(\"<i>\")\n    block()"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "bdcf5ce5f4e408142827cd6177ab9b94e52a93339d7c0ad3b4eb9d104f496087"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Property \"standardModules\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/scope/GlobalScope.kt",
      "language": "kotlin",
      "line": 13,
      "offset": 9,
      "length": 15,
      "code": {
        "startLine": 11,
        "length": 15,
        "offset": 62,
        "surroundingCode": "        get() = file.projects.flatMap { it.modules }\n\n    val standardModules: List<VB6Module>\n        get() = modules.filter { !it.isClass() }\n"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "7f44d9741acd5735ddb5fb4d1250b1d8ced18123331800597524430daa0aaa5e"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Property \"classModules\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/scope/GlobalScope.kt",
      "language": "kotlin",
      "line": 16,
      "offset": 9,
      "length": 12,
      "code": {
        "startLine": 14,
        "length": 12,
        "offset": 58,
        "surroundingCode": "        get() = modules.filter { !it.isClass() }\n\n    val classModules: List<VB6Module>\n        get() = modules.filter { it.isClass() }\n"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "1d8ec2e1dd1811ca98ec2a07fbe8211604c64355990797fd18781e9355ac6f07"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Class \"GlobalScope\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/scope/GlobalScope.kt",
      "language": "kotlin",
      "line": 8,
      "offset": 7,
      "length": 11,
      "code": {
        "startLine": 6,
        "length": 11,
        "offset": 49,
        "surroundingCode": "\n@Suppress(\"MemberVisibilityCanBePrivate\")\nclass GlobalScope(private val file: VB6File) : IModuleScope {\n\n    val modules: List<VB6Module>"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "81642ba89242cf143fc74398089d1a184fa1f8783da09b535185f9122937a098"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Interface \"VB6EventDeclaration\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/declarations/VB6EventDeclaration.kt",
      "language": "kotlin",
      "line": 3,
      "offset": 11,
      "length": 19,
      "code": {
        "startLine": 1,
        "length": 19,
        "offset": 65,
        "surroundingCode": "package com.github.tyrrx.vb6language.psi.declarations\n\ninterface VB6EventDeclaration {\n}"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "e41a86d4aa41c015dd540ef0387d17a2a0196476585c1205a1bc501b0f614a93"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Redundant semicolon",
  "severity": "High",
  "comment": "Redundant semicolon",
  "detailsInfo": "Reports redundant semicolons (`;`) that can be safely removed.\n\n\nKotlin does not require a semicolon at the end of each statement or expression.\nA quick-fix is suggested to remove redundant semicolons.\n\n**Example:**\n\n\n      val myMap = mapOf(\"one\" to 1, \"two\" to 2);\n      myMap.forEach { (key, value) ->  print(\"$key -> $value\")};\n\nAfter the quick-fix is applied:\n\n\n      val myMap = mapOf(\"one\" to 1, \"two\" to 2)\n      myMap.forEach { (key, value) ->  print(\"$key -> $value\")}\n\nThere are two cases though where a semicolon is required:\n\n1. Several statements placed on a single line need to be separated with semicolons:\n\n\n         map.forEach { val (key, value) = it; println(\"$key -> $value\") }\n\n2. `enum` classes that also declare properties or functions, require a semicolon after the list of enum constants:\n\n\n         enum class Mode {\n             SILENT, VERBOSE;\n\n             fun isSilent(): Boolean = this == SILENT\n         }\n               \n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/module/VB6Module.kt",
      "language": "kotlin",
      "line": 102,
      "offset": 80,
      "length": 1,
      "code": {
        "startLine": 100,
        "length": 1,
        "offset": 112,
        "surroundingCode": "        )\n        element?.let {\n            nameAttribute?.literals?.firstOrNull()?.literalElement?.replace(it);\n        }\n        return this"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RedundantSemicolon"
  },
  "hash": "1eb9b583bdbf8fbae277bc48e6f83c173c29731c7b4319a2d7bfe8e5b6ae48d6"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Redundant semicolon",
  "severity": "High",
  "comment": "Redundant semicolon",
  "detailsInfo": "Reports redundant semicolons (`;`) that can be safely removed.\n\n\nKotlin does not require a semicolon at the end of each statement or expression.\nA quick-fix is suggested to remove redundant semicolons.\n\n**Example:**\n\n\n      val myMap = mapOf(\"one\" to 1, \"two\" to 2);\n      myMap.forEach { (key, value) ->  print(\"$key -> $value\")};\n\nAfter the quick-fix is applied:\n\n\n      val myMap = mapOf(\"one\" to 1, \"two\" to 2)\n      myMap.forEach { (key, value) ->  print(\"$key -> $value\")}\n\nThere are two cases though where a semicolon is required:\n\n1. Several statements placed on a single line need to be separated with semicolons:\n\n\n         map.forEach { val (key, value) = it; println(\"$key -> $value\") }\n\n2. `enum` classes that also declare properties or functions, require a semicolon after the list of enum constants:\n\n\n         enum class Mode {\n             SILENT, VERBOSE;\n\n             fun isSilent(): Boolean = this == SILENT\n         }\n               \n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/utils/FindInSubtree.kt",
      "language": "kotlin",
      "line": 12,
      "offset": 76,
      "length": 1,
      "code": {
        "startLine": 10,
        "length": 1,
        "offset": 190,
        "surroundingCode": "\ninline fun <reified TResult: PsiElement> findPsiElementsInSubtree(subtreeRoot: PsiElement): Collection<TResult> {\n    return PsiTreeUtil.findChildrenOfType(subtreeRoot, TResult::class.java);\n}\n"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RedundantSemicolon"
  },
  "hash": "99d14668458cb41ce640d8b22beddfc8fa88439ba9ada0296fdc4fc206eef128"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Redundant semicolon",
  "severity": "High",
  "comment": "Redundant semicolon",
  "detailsInfo": "Reports redundant semicolons (`;`) that can be safely removed.\n\n\nKotlin does not require a semicolon at the end of each statement or expression.\nA quick-fix is suggested to remove redundant semicolons.\n\n**Example:**\n\n\n      val myMap = mapOf(\"one\" to 1, \"two\" to 2);\n      myMap.forEach { (key, value) ->  print(\"$key -> $value\")};\n\nAfter the quick-fix is applied:\n\n\n      val myMap = mapOf(\"one\" to 1, \"two\" to 2)\n      myMap.forEach { (key, value) ->  print(\"$key -> $value\")}\n\nThere are two cases though where a semicolon is required:\n\n1. Several statements placed on a single line need to be separated with semicolons:\n\n\n         map.forEach { val (key, value) = it; println(\"$key -> $value\") }\n\n2. `enum` classes that also declare properties or functions, require a semicolon after the list of enum constants:\n\n\n         enum class Mode {\n             SILENT, VERBOSE;\n\n             fun isSilent(): Boolean = this == SILENT\n         }\n               \n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/utils/FindInSubtree.kt",
      "language": "kotlin",
      "line": 8,
      "offset": 73,
      "length": 1,
      "code": {
        "startLine": 6,
        "length": 1,
        "offset": 175,
        "surroundingCode": "\ninline fun <reified TResult: PsiElement> findPsiElementInSubtree(subtreeRoot: PsiElement): TResult? {\n    return PsiTreeUtil.findChildOfType(subtreeRoot, TResult::class.java);\n}\n"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RedundantSemicolon"
  },
  "hash": "258ae46d4e3d6eec56fef07bae874bb20881ccd380c3872403a2ac640bcbc656"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Redundant semicolon",
  "severity": "High",
  "comment": "Redundant semicolon",
  "detailsInfo": "Reports redundant semicolons (`;`) that can be safely removed.\n\n\nKotlin does not require a semicolon at the end of each statement or expression.\nA quick-fix is suggested to remove redundant semicolons.\n\n**Example:**\n\n\n      val myMap = mapOf(\"one\" to 1, \"two\" to 2);\n      myMap.forEach { (key, value) ->  print(\"$key -> $value\")};\n\nAfter the quick-fix is applied:\n\n\n      val myMap = mapOf(\"one\" to 1, \"two\" to 2)\n      myMap.forEach { (key, value) ->  print(\"$key -> $value\")}\n\nThere are two cases though where a semicolon is required:\n\n1. Several statements placed on a single line need to be separated with semicolons:\n\n\n         map.forEach { val (key, value) = it; println(\"$key -> $value\") }\n\n2. `enum` classes that also declare properties or functions, require a semicolon after the list of enum constants:\n\n\n         enum class Mode {\n             SILENT, VERBOSE;\n\n             fun isSilent(): Boolean = this == SILENT\n         }\n               \n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/module/VB6PropertyLetStatement.kt",
      "language": "kotlin",
      "line": 58,
      "offset": 36,
      "length": 1,
      "code": {
        "startLine": 56,
        "length": 1,
        "offset": 74,
        "surroundingCode": "\n    override fun getName(): String? {\n        return nameIdentifier?.name;\n    }\n"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RedundantSemicolon"
  },
  "hash": "c5545a888bdfd92b4ba3b926e803f7abb23c815716a402829c4df2e80baf1cbb"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Redundant semicolon",
  "severity": "High",
  "comment": "Redundant semicolon",
  "detailsInfo": "Reports redundant semicolons (`;`) that can be safely removed.\n\n\nKotlin does not require a semicolon at the end of each statement or expression.\nA quick-fix is suggested to remove redundant semicolons.\n\n**Example:**\n\n\n      val myMap = mapOf(\"one\" to 1, \"two\" to 2);\n      myMap.forEach { (key, value) ->  print(\"$key -> $value\")};\n\nAfter the quick-fix is applied:\n\n\n      val myMap = mapOf(\"one\" to 1, \"two\" to 2)\n      myMap.forEach { (key, value) ->  print(\"$key -> $value\")}\n\nThere are two cases though where a semicolon is required:\n\n1. Several statements placed on a single line need to be separated with semicolons:\n\n\n         map.forEach { val (key, value) = it; println(\"$key -> $value\") }\n\n2. `enum` classes that also declare properties or functions, require a semicolon after the list of enum constants:\n\n\n         enum class Mode {\n             SILENT, VERBOSE;\n\n             fun isSilent(): Boolean = this == SILENT\n         }\n               \n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/psi/tree/definition/module/VB6PropertySetStatement.kt",
      "language": "kotlin",
      "line": 58,
      "offset": 36,
      "length": 1,
      "code": {
        "startLine": 56,
        "length": 1,
        "offset": 74,
        "surroundingCode": "\n    override fun getName(): String? {\n        return nameIdentifier?.name;\n    }\n"
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "RedundantSemicolon"
  },
  "hash": "9df2ab31d1f5e0855e984981e2cb2cd9e0b7425d58996b01f3f8030e037d7eda"
},{
  "tool": "Code Inspection",
  "category": "JVM languages",
  "type": "Unstable API Usage",
  "severity": "High",
  "comment": "'getDebugName()' is marked unstable with @ApiStatus.Internal",
  "detailsInfo": "Reports usages of an API marked with one of the annotations as unstable. Such an API may be changed or removed in future versions, breaking the code that uses it.\n\nThe annotations which are used to mark unstable APIs are shown in the list below.\n\nBy default, the inspection ignores usages of unstable APIs\nif their declarations are located in sources of the same project. In such cases it'll be possible to update the usages when you change APIs.\nHowever, it may be inconvenient if the project is big, so one can switch off the **Ignore API declared in this project** option to report\nthe usages of unstable APIs declared in both the project sources and libraries.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/com/github/tyrrx/vb6language/language/ASTFactory.kt",
      "language": "kotlin",
      "line": 42,
      "offset": 67,
      "length": 9,
      "code": {
        "startLine": 40,
        "length": 9,
        "offset": 125,
        "surroundingCode": "                } else {\n                    logger.error(\n                        \"Duplicate usage of IElementType ${it.key.debugName} \" +\n                                \"as key for value ${it.value.javaClass.simpleName} \" +\n                                \"and value ${resultHashMap[it.key]?.javaClass?.simpleName}\""
      }
    }
  ],
  "attributes": {
    "module": "vb6-language.main",
    "inspectionName": "UnstableApiUsage"
  },
  "hash": "e0ef53152fe0a57117b4ef04434eaad6977ace3bf7ddb5cad88a4e43c25bc894"
}]}